{"version":3,"file":"component---src-templates-post-js-5cdbb29895d046d1ffd2.js","mappings":"gQAOaA,EAAc,SAAH,GAKjB,IAAD,MAJJC,KAAAA,OAAI,MAAG,GAAE,EACTC,EAAI,EAAJA,KAAK,EAAD,EACJC,WAAAA,OAAU,MAAG,GAAE,EACfC,EAAS,EAATA,UAEiBD,MAAAA,GAAAA,EAAYE,QAAO,SAACC,GAAQ,MAAkB,cAAbA,KAElD,OACE,yBAAOC,UAAU,gBACdH,GACC,uBAAKG,UAAU,cACb,gBAAC,IAAG,CAACC,MAAgC,QAA3B,EAAEJ,EAAUK,uBAAe,aAAzB,EAA2BD,SAG3C,uBAAKD,UAAU,qBACb,sCACA,uBAAKG,IAAKC,EAAAA,EAAIC,IAAI,SAASL,UAAU,mBACrC,qEAC4C,IAC1C,gBAAC,EAAAM,KAAI,CAACC,GAAG,OAAK,cAAmB,mDAGnC,uOAMF,uBAAKP,UAAU,qBACb,qCACA,0BACE,uCAAeL,IAGjB,wCACA,uBAAKK,UAAU,QACZJ,EAAWY,KAAI,SAACT,GACf,OACE,gBAAC,EAAAO,KAAI,CACHG,IAAKV,EACLQ,GAAE,gBAAiBG,EAAAA,EAAAA,IAAQX,GAC3BC,UAAU,MACVW,gBAAgB,UAEfZ,OAMT,2BAEA,kCACA,uBAAKC,UAAU,QACZN,EAAKc,KAAI,SAACI,GACT,OACE,gBAAC,EAAAN,KAAI,CACHG,IAAKG,EACLL,GAAE,UAAWG,EAAAA,EAAAA,IAAQE,GACrBZ,UAAU,MACVW,gBAAgB,UAEfC,UCpEJC,EAAW,SAAH,GAAwB,IAAlBC,EAAU,EAAVA,WACzB,OAAO,uBAAKC,IAAKD,K,UCQJ,SAASE,EAAa,GAAW,IACxCC,EADmC,EAAJC,KACnBC,eAClB,EACEF,EAAKG,YADC1B,EAAI,EAAJA,KAAME,EAAU,EAAVA,WAAYyB,EAAK,EAALA,MAAO1B,EAAI,EAAJA,KAAME,EAAS,EAATA,UAAWyB,EAAY,EAAZA,aAE5CR,EAAaS,EAAAA,YAMnB,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeX,KACd,CAACA,IAGF,2BACE,gBAACY,EAAA,EAAM,CAACL,MAAUJ,EAAKG,YAAYC,MAAK,MAAMM,EAAAA,EAAAA,YAC9C,gBAACC,EAAA,EAAG,CAACC,SAAUZ,EAAKa,OAAOC,KAAMC,SAAUf,EAAMgB,SAAO,IAExD,uBAAKjC,UAAU,aACb,uBAAKA,UAAU,QACb,uBAAKA,UAAU,mBACb,uBAAKA,UAAU,4BACb,0BAAKqB,IAEP,2BAASrB,UAAU,iBACjB,uBACEkC,GAAIjB,EAAKa,OAAOC,KAChB/B,UAAU,eACVmC,wBAAyB,CAAEC,OAAQnB,EAAKoB,UAI1Cf,GACA,2BAASY,GAAG,WAAWlC,UAAU,oBAC/B,sCACA,gBAACa,EAAQ,CAACC,WAAYA,MAK5B,gBAACrB,EAAW,CACVE,KAAMA,EACND,KAAMA,EACNE,WAAYA,EACZC,UAAWA,OAQvBmB,EAAasB,OAASA,EAAAA,G,qBC5DtB,IAAe,IAA0B","sources":["webpack://eldoraboo.github.io/./src/components/PostSidebar.js","webpack://eldoraboo.github.io/./src/components/Comments.js","webpack://eldoraboo.github.io/./src/templates/post.js","webpack://eldoraboo.github.io/./static/profile.jpg"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport { slugify } from '../utils/helpers'\nimport me from '../../static/profile.jpg'\n\nexport const PostSidebar = ({\n  tags = [],\n  date,\n  categories = [],\n  thumbnail,\n}) => {\n  const category = categories?.filter((category) => category !== 'Highlight')\n\n  return (\n    <aside className=\"post-sidebar\">\n      {thumbnail && (\n        <div className=\"post-image\">\n          <Img fixed={thumbnail.childImageSharp?.fixed} />\n        </div>\n      )}\n      <div className=\"post-sidebar-card\">\n        <h2>About me</h2>\n        <img src={me} alt=\"Eldora\" className=\"sidebar-avatar\" />\n        <p>\n          Hello and thanks for visiting! My name is{' '}\n          <Link to=\"/me\">Eldora Boo</Link>, and this is my website and digital\n          garden. ðŸŒ±\n        </p>\n        <p>\n          I'm a software developer who creates open-source projects and writes\n          about code, design, and life. This site is and has always been free of\n          ads, trackers, social media, affiliates, and sponsored posts.\n        </p>\n      </div>\n      <div className=\"post-sidebar-card\">\n        <h2>Details</h2>\n        <ul>\n          <li>Published {date}</li>\n        </ul>\n\n        <h2>Categories</h2>\n        <div className=\"tags\">\n          {categories.map((category) => {\n            return (\n              <Link\n                key={category}\n                to={`/categories/${slugify(category)}`}\n                className=\"tag\"\n                activeClassName=\"active\"\n              >\n                {category}\n              </Link>\n            )\n          })}\n        </div>\n        \n        <br></br>\n\n        <h2>Tags</h2>\n        <div className=\"tags\">\n          {tags.map((tag) => {\n            return (\n              <Link\n                key={tag}\n                to={`/tags/${slugify(tag)}`}\n                className=\"tag\"\n                activeClassName=\"active\"\n              >\n                {tag}\n              </Link>\n            )\n          })}\n        </div>\n      </div>\n    </aside>\n  )\n}\n","import React from 'react'\n\nexport const Comments = ({ commentBox }) => {\n  return <div ref={commentBox} />\n}\n","import React, { useEffect } from 'react'\nimport { graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\n\nimport { Layout } from '../components/Layout'\nimport { SEO } from '../components/SEO'\nimport { PostSidebar } from '../components/PostSidebar'\nimport { Comments } from '../components/Comments'\nimport config from '../utils/config'\nimport { appendComments } from '../utils/helpers'\n\nexport default function PostTemplate({ data }) {\n  const post = data.markdownRemark\n  const { tags, categories, title, date, thumbnail, comments_off } =\n    post.frontmatter\n  const commentBox = React.createRef()\n\n  useEffect(() => {\n    appendComments(commentBox)\n  }, [commentBox])\n\n  return (\n    <div>\n      <Helmet title={`${post.frontmatter.title} | ${config.siteTitle}`} />\n      <SEO postPath={post.fields.slug} postNode={post} postSEO />\n\n      <div className=\"container\">\n        <div className=\"grid\">\n          <div className=\"article-content\">\n            <div className=\"post-header medium width\">\n              <h1>{title}</h1>\n            </div>\n            <section className=\"segment small\">\n              <div\n                id={post.fields.slug}\n                className=\"post-content\"\n                dangerouslySetInnerHTML={{ __html: post.html }}\n              />\n            </section>\n\n            {!comments_off && (\n              <section id=\"comments\" className=\"segment comments\">\n                <h3>Comments</h3>\n                <Comments commentBox={commentBox} />\n              </section>\n            )}\n          </div>\n\n          <PostSidebar\n            date={date}\n            tags={tags}\n            categories={categories}\n            thumbnail={thumbnail}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nPostTemplate.Layout = Layout\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n        categories\n        description\n        comments_off\n        thumbnail {\n          childImageSharp {\n            fixed(width: 150, height: 150) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","export default __webpack_public_path__ + \"static/profile-b181471168d5c48d594a54b539c539b7.jpg\";"],"names":["PostSidebar","tags","date","categories","thumbnail","filter","category","className","fixed","childImageSharp","src","me","alt","Link","to","map","key","slugify","activeClassName","tag","Comments","commentBox","ref","PostTemplate","post","data","markdownRemark","frontmatter","title","comments_off","React","useEffect","appendComments","Helmet","config","SEO","postPath","fields","slug","postNode","postSEO","id","dangerouslySetInnerHTML","__html","html","Layout"],"sourceRoot":""}