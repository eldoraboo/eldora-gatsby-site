{"version":3,"file":"component---src-pages-index-js-76f4ac3ee0e969122d2f.js","mappings":"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","sources":["webpack://eldoraboo.github.io/./src/components/Hero.js","webpack://eldoraboo.github.io/./src/components/Post.js","webpack://eldoraboo.github.io/./src/components/Posts.js","webpack://eldoraboo.github.io/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://eldoraboo.github.io/./src/data/projectsList.js","webpack://eldoraboo.github.io/./src/components/Heading.js","webpack://eldoraboo.github.io/./src/pages/index.js"],"sourcesContent":["import React from 'react'\n\nexport const Hero = ({ highlight, subTitle, title, children, index }) => {\n  return (\n    <header className={`hero ${index ? 'index' : ''}`}>\n      {subTitle && (\n        <div className=\"sub-title\">\n          {highlight && <span className=\"highlight\">{highlight}</span>}\n          {subTitle}\n        </div>\n      )}\n      {title && <h1>{title}</h1>}\n      {children && children}\n    </header>\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nexport const Post = ({ node, prefix, newspaper }) => {\n  let formattedDate\n\n  if (node.date) {\n    const dateArr = node.date.split(' ')\n    dateArr.pop()\n\n    dateArr[0] = dateArr[0].slice(0, 3)\n    formattedDate = dateArr.join(' ').slice(0, -1)\n  }\n\n  return (\n    <Link\n      to={prefix ? `/${prefix}${node.slug}` : node.slug}\n      key={node.id}\n      className=\"post\"\n    >\n      {newspaper ? (\n        <>\n          <time>{formattedDate}</time>\n          <h3>{node.title}</h3>\n        </>\n      ) : (\n        <>\n          <h3>{node.title}</h3>\n          <time style={{ marginLeft: 'auto' }}>{formattedDate}</time>\n        </>\n      )}\n    </Link>\n  )\n}\n","import React, { useMemo } from 'react'\n\nimport { Post } from './Post'\n\nexport const Posts = ({\n  data = [],\n  showYears,\n  query,\n  prefix,\n  hideDate,\n  yearOnly,\n  ...props\n}) => {\n  const postsByYear = useMemo(() => {\n    const collection = {}\n\n    data.forEach((post) => {\n      const year = post.date?.split(', ')[1]\n\n      collection[year] = [...(collection[year] || []), post]\n    })\n\n    return collection\n  }, [data])\n  const years = useMemo(() => Object.keys(postsByYear).reverse(), [postsByYear])\n\n  if (showYears) {\n    return years.map((year) => (\n      <section key={year} className=\"segment\">\n        <h2 className=\"year\">{year}</h2>\n        <div className=\"posts\">\n          {postsByYear[year].map((node) => (\n            <Post key={node.id} node={node} query={query} prefix={prefix} />\n          ))}\n        </div>\n      </section>\n    ))\n  } else {\n    return (\n      <div className={props.newspaper ? 'posts newspaper' : 'posts'}>\n        {data.map((node) => (\n          <Post\n            key={node.id}\n            node={node}\n            query={query}\n            prefix={prefix}\n            hideDate={hideDate}\n            yearOnly={yearOnly}\n            {...props}\n          />\n        ))}\n      </div>\n    )\n  }\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","export const projectsList = [\n  {\n    name: 'taniarascia.com',\n    date: '2022',\n    slug: 'taniarascia.com',\n    tagline: 'The source of this website.',\n  },\n  {\n    name: 'Keyboard Accordion',\n    date: '2022',\n    slug: 'accordion',\n    tagline: 'Play the accordion with your keyboard!',\n    url: 'https://www.keyboardaccordion.com',\n    writeup: '/musical-instrument-web-audio-api',\n    highlight: true,\n  },\n  {\n    name: 'TakeNote',\n    date: '2020',\n    slug: 'takenote',\n    tagline: 'A free, open source notes app for the web.',\n    url: 'https://takenote.dev',\n    writeup: '/building-takenote',\n    highlight: true,\n  },\n  {\n    name: 'Chip8',\n    date: '2019',\n    slug: 'chip8',\n    tagline: 'A retro game emulator for three platforms.',\n    url: 'https://taniarascia.github.io/chip8',\n    writeup: '/writing-an-emulator-in-javascript-chip8',\n    highlight: true,\n  },\n  {\n    name: 'Sokoban',\n    date: '2021',\n    slug: 'sokoban',\n    tagline: 'A web-based Sokoban implementation.',\n    url: 'https://taniarascia.github.io/sokoban',\n    writeup: '/sokoban-game',\n    highlight: true,\n  },\n  {\n    name: 'New Moon',\n    date: '2015',\n    slug: 'new-moon',\n    tagline: 'The optimized dark theme for web development.',\n    url: 'https://taniarascia.github.io/new-moon',\n    highlight: true,\n  },\n  {\n    name: 'Laconia',\n    date: '2018',\n    slug: 'laconia',\n    tagline: 'An MVC framework from scratch in PHP.',\n    url: 'https://laconia.dev',\n  },\n  {\n    name: 'Primitive',\n    date: '2017',\n    slug: 'primitive',\n    tagline: 'A front-end design toolkit for responsive web apps.',\n    url: 'https://taniarascia.github.io/primitive',\n  },\n  {\n    name: 'Snek',\n    date: '2019',\n    slug: 'snek',\n    tagline: 'A terminal-based Snake implementation.',\n    writeup: '/snake-game-in-javascript',\n    highlight: true,\n  },\n  {\n    date: '2020',\n    name: 'webpack Boilerplate',\n    slug: 'webpack-boilerplate',\n    tagline: 'A sensible webpack 5 boilerplate.',\n  },\n  {\n    name: 'Chat App',\n    date: '2021',\n    slug: 'chat',\n    tagline: 'React/Redux, TypeScript, Socket.io chat app.',\n  },\n  {\n    name: 'React Advanced Form',\n    date: '2022',\n    slug: 'react-advanced-form',\n    tagline: 'An example of a schema-based form system for React.',\n  },\n]\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nexport const Heading = ({ title, description, slug }) => {\n  return (\n    <h2 className=\"home-heading\">\n      <div>\n        <div className=\"title\">{title}</div>\n        {description && <div className=\"description\">{description}</div>}\n      </div>\n      {slug && (\n        <Link className=\"button\" to={slug}>\n          View all\n        </Link>\n      )}\n    </h2>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport Img from 'gatsby-image'\n\nimport { Layout } from '../components/Layout'\nimport { Posts } from '../components/Posts'\nimport { SEO } from '../components/SEO'\nimport { Heading } from '../components/Heading'\nimport { Hero } from '../components/Hero'\nimport { projectsList } from '../data/projectsList'\nimport { getSimplifiedPosts } from '../utils/helpers'\nimport config from '../utils/config'\n\nexport default function Index({ data }) {\n  const latest = data.latest.edges\n  const highlights = data.highlights.edges\n  const simplifiedLatest = useMemo(() => getSimplifiedPosts(latest), [latest])\n  const simplifiedHighlights = useMemo(\n    () =>\n      getSimplifiedPosts(highlights, { shortTitle: true, thumbnails: true }),\n    [highlights]\n  )\n\n  return (\n    <div>\n      <Helmet title={config.siteTitle} />\n      <SEO />\n\n      <div className=\"container\">\n        <div className=\"hero-wrapper\">\n          <Hero title=\"Hey, I'm Eldora!\" index>\n            <p className=\"hero-description small width\">\n              Welcome to my digital garden. 🌱\n              <br />\n              <br />\n              I'm a software developer in Singapore. I make{' '}\n              <Link to=\"/projects\">open-source projects</Link> and{' '}\n              <Link to=\"/blog\">write</Link> about code, design, and life. I like\n              playing the piano, crocheting, synthwave, makeup, and coding.\n              <br />\n              <br />\n              More <Link to=\"/me\">about me</Link>.\n            </p>\n          </Hero>\n          <div className=\"decoration\">\n            <img\n              src=\"/ram.png\"\n              alt=\"RAM Ram\"\n              className=\"image\"\n              title=\"RAM Ram\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <section className=\"segment first\">\n          <Heading title=\"Latest Posts\" slug=\"/blog\" />\n\n          <Posts data={simplifiedLatest} newspaper />\n        </section>\n\n        <section className=\"segment large\">\n          <Heading title=\"Popular\" />\n\n          <div className=\"highlight-preview\">\n            {simplifiedHighlights.map((post) => {\n              return (\n                <div className=\"muted card flex\" key={`popular-${post.slug}`}>\n                  {post.thumbnail && <Img fixed={post.thumbnail} />}\n                  <div>\n                    <time>{post.date}</time>\n                    <Link className=\"card-header\" to={post.slug}>\n                      {post.title}\n                    </Link>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </section>\n\n        <section className=\"segment large\">\n          <Heading title=\"Projects\" slug=\"/projects\" />\n\n          <div className=\"post-preview\">\n            {projectsList\n              .filter((project) => project.highlight)\n              .map((project) => {\n                return (\n                  <div className=\"anchored card\" key={project.slug}>\n                    <div>\n                      <time>{project.date}</time>\n                      <a\n                        className=\"card-header\"\n                        href={`https://github.com/taniarascia/${project.slug}`}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        {project.name}\n                      </a>\n                      <p>{project.tagline}</p>\n                    </div>\n                    <div className=\"anchored links\">\n                      {project.writeup && (\n                        <Link className=\"button\" to={project.writeup}>\n                          Article\n                        </Link>\n                      )}\n                      <a className=\"button flex\" href={project.url}>\n                        Demo\n                      </a>\n                    </div>\n                  </div>\n                )\n              })}\n          </div>\n        </section>\n\n        <section className=\"segment large\">\n          <Heading title=\"Newsletter\" />\n          <p>\n            If I write something new, I'll let you know via newsletter. I don't\n            update often, and don't spam ever.\n          </p>\n          <p>\n            <a\n              href=\"https://taniarascia.substack.com/subscribe\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"button large\"\n            >\n              Subscribe to the Newsletter\n            </a>\n          </p>\n        </section>\n      </div>\n    </div>\n  )\n}\n\nIndex.Layout = Layout\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    latest: allMarkdownRemark(\n      limit: 10\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { template: { eq: \"post\" } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            categories\n          }\n        }\n      }\n    }\n    highlights: allMarkdownRemark(\n      limit: 12\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { categories: { eq: \"Highlight\" } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            shortTitle\n            tags\n            thumbnail {\n              childImageSharp {\n                fixed(width: 45, height: 45) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["Hero","highlight","subTitle","title","children","index","className","Post","formattedDate","node","prefix","newspaper","date","dateArr","split","pop","slice","join","Link","to","slug","key","id","style","marginLeft","Posts","data","showYears","query","hideDate","yearOnly","props","source","excluded","i","target","sourceKeys","Object","keys","length","indexOf","postsByYear","useMemo","collection","forEach","post","year","years","reverse","map","projectsList","name","tagline","url","writeup","Heading","description","Index","latest","edges","highlights","simplifiedLatest","getSimplifiedPosts","simplifiedHighlights","shortTitle","thumbnails","Helmet","config","SEO","src","alt","thumbnail","fixed","project","href","rel","Layout"],"sourceRoot":""}